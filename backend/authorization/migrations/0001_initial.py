# Generated by Django 4.1.3 on 2023-05-16 19:50

import authorization.models
import backend.customs
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="TokenBlacklist",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "token",
                    backend.customs.CustomTextField(
                        help_text="Token",
                        max_length=500,
                        unique=True,
                        verbose_name="Token",
                    ),
                ),
                (
                    "blacklisted_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Blacklisted At"
                    ),
                ),
            ],
            options={
                "verbose_name": "Token Blacklist",
                "verbose_name_plural": "Token Blacklist",
            },
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "username",
                    backend.customs.CustomCharField(
                        db_index=True,
                        help_text="Username",
                        max_length=255,
                        unique=True,
                        verbose_name="Username",
                    ),
                ),
                (
                    "email",
                    backend.customs.CustomEmailField(
                        help_text="Email Address",
                        max_length=254,
                        unique=True,
                        verbose_name="Email",
                    ),
                ),
                (
                    "first_name",
                    backend.customs.CustomCharField(
                        help_text="First Name",
                        max_length=255,
                        verbose_name="First Name",
                    ),
                ),
                (
                    "last_name",
                    backend.customs.CustomCharField(
                        help_text="Last Name", max_length=255, verbose_name="Last Name"
                    ),
                ),
                (
                    "password",
                    backend.customs.CustomCharField(
                        max_length=255, verbose_name="Password"
                    ),
                ),
                (
                    "salt",
                    backend.customs.CustomCharField(
                        max_length=255, null=True, verbose_name="Salt"
                    ),
                ),
                (
                    "phone_number",
                    backend.customs.CustomCharField(
                        blank=True,
                        help_text="Phone Number",
                        max_length=20,
                        verbose_name="Phone Number",
                    ),
                ),
                (
                    "address",
                    backend.customs.CustomCharField(
                        blank=True,
                        help_text="Address",
                        max_length=255,
                        verbose_name="Address",
                    ),
                ),
                (
                    "city",
                    backend.customs.CustomCharField(
                        blank=True,
                        help_text="City",
                        max_length=100,
                        verbose_name="City",
                    ),
                ),
                (
                    "state",
                    backend.customs.CustomCharField(
                        blank=True,
                        help_text="State",
                        max_length=100,
                        verbose_name="State",
                    ),
                ),
                (
                    "zip_code",
                    backend.customs.CustomCharField(
                        blank=True,
                        help_text="Zip Code",
                        max_length=20,
                        verbose_name="Zipcode",
                    ),
                ),
                (
                    "country",
                    backend.customs.CustomCharField(
                        blank=True,
                        help_text="Country",
                        max_length=100,
                        verbose_name="Country",
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "User",
                "verbose_name_plural": "Users",
            },
            managers=[
                ("objects", authorization.models.CustomUserManager()),
            ],
        ),
    ]
